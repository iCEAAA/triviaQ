{"Questions":[{"Question":"Are Python and C++ both more vulnerable to buffer overflows than C?","Explanation":"As C and C++ are both programming languages that give developers flexibility on how memory is managed, it is easier for memory to be mismanaged, opening up the potential for a buffer overflow attack. Languages such as Java and Python are more restrictive, making buffer overflows a lot more rare.","Image":"","isToF":true,"ToFAnswer":false,"Answers":[]},{"Question":"The CPU will execute the wrong instructions if the return pointer on a stack is manipulated?","Explanation":"The return pointer is a memory address dictating where the CPU should next execute instructions. If this is manipulated, attackers can effectively determine which instructions are executed.","Image":"","isToF":true,"ToFAnswer":true,"Answers":[]},{"Question":"Which type of cyberattack requires the manipulation of memory stored within a stack to achieve it?","Explanation":"Buffer overflows are a cyberattack involving the manipulation of memory within a stack to achieve unintended effects. For example, attackers can control the instructions the CPU executes by manipulating the return pointer on the stack.","Image":"","isToF":false,"ToFAnswer":false,"Answers":[{"Text":"Stack injection","Correct":false},{"Text":"Buffer overflow","Correct":true},{"Text":"Remote code execution","Correct":false},{"Text":"All of the above","Correct":false}]},{"Question":"The strcpy() function in C is:","Explanation":"The function strcpy() is used in C to copy a string into another variable. It is vulnerable to buffer overflow attacks as it does not ensure that the lengths of both inputs are the same length. Therefore, if a string is copied into a variable that has less memory allocated to it, the CPU will override excess memory with the string's characters.","Image":"","isToF":false,"ToFAnswer":false,"Answers":[{"Text":"Safe to use when trying to copy strings due to its in-built checks.","Correct":false},{"Text":"Dangerous to use without input sanitisation.","Correct":false},{"Text":"Can protect against buffer overflow attacks.\n","Correct":true},{"Text":"Both a and c.","Correct":false}]},{"Question":"A vulnerability scanner is a tool designed to detect zero-day vulnerabilities.","Explanation":"Vulnerability scanners cannot be designed to detect zero-day vulnerabilities as they are typically vulnerabilities that are unknown to defenders, with no existing patches to resolve them.","Image":"","isToF":true,"ToFAnswer":false,"Answers":[]},{"Question":"Vulnerability scanners:","Explanation":"Vulnerability scanners are capable of scanning a network for known vulnerabilities, but cannot reliably protect a network from unknown vulnerabilities. As a result of this, they cannot definitively protect a network from every attempted cyberattack.","Image":"","isToF":false,"ToFAnswer":false,"Answers":[{"Text":"Scan a network for known vulnerabilities in software or configurations.","Correct":false},{"Text":"Login to systems, if allowed to, to scan for vulnerabilities.","Correct":false},{"Text":"Protect a network from all attempted cyberattacks.","Correct":false},{"Text":"Both a and b.","Correct":true}]},{"Question":"Which of the following is not a valid payload an attacker can use to remotely execute code?","Explanation":"All of the above options are valid payloads that can be used to remotely execute code.","Image":"","isToF":false,"ToFAnswer":false,"Answers":[{"Text":"Opening a GUI on the victim's end to remotely control it.","Correct":false},{"Text":"Utilising a shell to send commands through.","Correct":false},{"Text":"Creating a backdoor user account to be used by the attacker.","Correct":false},{"Text":"None of the above.","Correct":true}]},{"Question":"Firewalls are capable of denying incoming connections by closing ports.","Explanation":"Firewalls are able to deny incoming connections by closing off ports that should not be open. As ports can only be accessed if they are not in use, only unused open ports can be used to make a connection.","Image":"","isToF":true,"ToFAnswer":true,"Answers":[]},{"Question":"When monitoring a network, the context of signals from a failed attack is irrelevant as the attack can be considered noise.","Explanation":"The context of signals from any attempted attack can be used to determine many different things. For example, if the attack originates from a trusted IP address then the network is trusting a malicious IP address.","Image":"","isToF":true,"ToFAnswer":false,"Answers":[]},{"Question":"Network monitoring can detect which of the following:","Explanation":"While network monitoring can detect abnormal patterns, it cannot definitively detect all attacks or always determine whether a user is accessing a network with malicious intent.","Image":"","isToF":false,"ToFAnswer":false,"Answers":[{"Text":"Whether a user is accessing the network with malicious intent.","Correct":false},{"Text":"All of the ways the network is vulnerable to attacks.\n","Correct":false},{"Text":"Irregular patterns, such as abnormally long connections.","Correct":true}]},{"Question":" A compromised host can allow access to other networks, using lateral movement, by:","Explanation":"Pivoting involves using a compromised host to access other networks. A buffer overflow and DDoS attack do not achieve the same via lateral movement.","Image":"","isToF":false,"ToFAnswer":false,"Answers":[{"Text":"Pivoting","Correct":true},{"Text":"A DDoS attack","Correct":false},{"Text":"Using a buffer overflow","Correct":false},{"Text":"None of the above","Correct":false}]},{"Question":"An RCE is best described as a type of cyberattack that involves exploiting a service to let attackers:","Explanation":"RCE (Remote code execution) is a type of cyberattack involving an attacker exploiting a service to execute their own code.","Image":"","isToF":false,"ToFAnswer":false,"Answers":[{"Text":"Remotely execute code through a vulnerability.","Correct":true},{"Text":"Rapidly execute code to overload it.","Correct":false},{"Text":"Trigger multiple crashes rapidly to overload it. ","Correct":false},{"Text":"Remotely crash a service through a vulnerability.","Correct":false}]}]}